function subsamp(x, y, orig_size)
    
    %Read the image
    I = imread('Pollen_orig.jpg');
    
    %Find the dimensions of the image
    [m, n] = size(I);

    %If orig_size is true,the size of the image needs to be retained after
    %subsampling,so applying  1.averaging 2.nearest interpolation algorithm 
    if(orig_size == true)
        
        %near by values are averaged and stored in subSampImg1
        subSampImg1 = uint8(zeros(m, n));
        
        %subSampImg2 is generated by applying nearest neighbour algorithm
        subSampImg2 = uint8(zeros(m, n));
        
        %Take the multiples of xth row and yth column from original image
        %and fill other rows and columns with 1.average of adjacent
        %pixels in subSampImg2  2.copy near by pixel values
        for i=1:n
            if(mod((i-1),x) == 0)
                for j=1:m
                    if(mod((j-1),y) == 0)
                        subSampImg1(i, j) = I(i, j);
                        subSampImg2(i, j) = I(i, j);
                        lastColVal = subSampImg1(i, j);
                    else
                        if(j ~= m)
                            subSampImg1(i, j) = (lastColVal + I(i, j+1))/2;
                            subSampImg2(i, j) = lastColVal;
                        else
                            subSampImg1(i, j) = 0;
                            subSampImg2(i, j) = 0;
                        end
                    end
                end
            else
                if((i ~= 1) && (i ~= n))
                    subSampImg1(i, :) = (subSampImg1(i-1, :) + I(i+1, :))/2;
                    subSampImg2(i, :) = subSampImg2(i-1, :);
                end
            end

        end 
        sI1 = mat2gray(subSampImg1, [0, 255]);
        sI2 = mat2gray(subSampImg2, [0, 255]);
        
        %Plot the images
        subplot(2,2,1), subimage(I),title('Original Image');  v = axis;
        subplot(2,2,2), subimage(sI1),title('Average'); axis(v);
        subplot(2,2,3), subimage(sI2),title('Nearest neighbour'); axis(v);

    else
        mx = ceil(m/x);
        ny = ceil(n/y);
        
        %Initialize the matrix of size originaldimension/samplingratio(x or y)
        subSampImg = zeros(mx, ny);
        
        %Take the multiples of xth row and yth column from original image
        %into the subsampled Image
        k = 1;
        for i=1:n
            l = 1;
            if(mod((i-1),x) == 0)
                for j=1:m
                    if(mod((j-1),y) == 0)
                        subSampImg(k, l) = I(i, j);
                        l = l + 1;
                    end
                end
                k = k + 1;
            end
        end 
        
        %Plot original and subsampled Image
        sI = mat2gray(subSampImg, [0, 255]);
        subplot(1,2,1), subimage(I),title('Original Image'); v = axis;
        subplot(1,2,2), subimage(sI),title('Subsampled Image'); axis(v);
    end

end